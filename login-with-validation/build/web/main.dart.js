// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = flutter_sdk.src__widgets__binding;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const dialog = flutter_sdk.src__material__dialog;
  const text = flutter_sdk.src__widgets__text;
  const text_button = flutter_sdk.src__material__text_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const page = flutter_sdk.src__material__page;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const text_style = flutter_sdk.src__painting__text_style;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var login = Object.create(dart.library);
  var signup = Object.create(dart.library);
  var home = Object.create(dart.library);
  var $toString = dartx.toString;
  var $trim = dartx.trim;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToMyLogin: () => (T.BuildContextToMyLogin = dart.constFn(dart.fnType(login.MyLogin, [framework.BuildContext])))(),
    BuildContextToMySignup: () => (T.BuildContextToMySignup = dart.constFn(dart.fnType(signup.MySignup, [framework.BuildContext])))(),
    BuildContextToHomePage: () => (T.BuildContextToHomePage = dart.constFn(dart.fnType(home.HomePage, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T.BuildContextToWidget())))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    }
  }, false);
  var C = [void 0];
  var I = [
    "package:flutter_app/login.dart",
    "package:flutter_app/signup.dart",
    "package:flutter_app/home.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.main = function main$0() {
    binding.runApp(new app.MaterialApp.new({initialRoute: "login", routes: new (T.IdentityMapOfString$BuildContextToWidget()).from(["login", dart.fn(context => new login.MyLogin.new(), T.BuildContextToMyLogin()), "signup", dart.fn(context => new signup.MySignup.new(), T.BuildContextToMySignup()), "home", dart.fn(context => new home.HomePage.new({userEmail: "", successMessage: ""}), T.BuildContextToHomePage())])}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  login.MyLogin = class MyLogin extends framework.StatefulWidget {
    createState() {
      return new login._MyLoginState.new();
    }
    static ['_#new#tearOff']() {
      return new login.MyLogin.new();
    }
  };
  (login.MyLogin.new = function() {
    login.MyLogin.__proto__.new.call(this);
    ;
  }).prototype = login.MyLogin.prototype;
  dart.addTypeTests(login.MyLogin);
  dart.addTypeCaches(login.MyLogin);
  dart.setMethodSignature(login.MyLogin, () => ({
    __proto__: dart.getMethods(login.MyLogin.__proto__),
    createState: dart.fnType(login._MyLoginState, [])
  }));
  dart.setLibraryUri(login.MyLogin, I[0]);
  var _validateInputs = dart.privateName(login, "_validateInputs");
  login._MyLoginState = class _MyLoginState extends framework.State$(login.MyLogin) {
    [_validateInputs]() {
      let email = this.emailController.text[$trim]();
      let password = this.passwordController.text[$trim]();
      if (email[$isEmpty] || password[$isEmpty]) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter both email and password."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      if (!login._MyLoginState.emailRegex.hasMatch(email)) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter a valid email address."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      if (!login._MyLoginState.passwordRegex.hasMatch(password)) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter a valid password.\n" + "Password must contain at least one lowercase letter, " + "one uppercase letter, one special character (@ or _), " + "and be at least 8 characters long."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      return true;
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Login")}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(20), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text_field.TextField.new({controller: this.emailController, decoration: new input_decorator.InputDecoration.new({labelText: "Email"})}), new text_field.TextField.new({controller: this.passwordController, decoration: new input_decorator.InputDecoration.new({labelText: "Password"}), obscureText: true}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  if (this[_validateInputs]()) {
                    let email = this.emailController.text[$trim]();
                    let password = this.passwordController.text[$trim]();
                    navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), context, new page.MaterialPageRoute.new({builder: dart.fn(context => new home.HomePage.new({userEmail: email, successMessage: "Login Successful!"}), T.BuildContextToHomePage())}));
                  }
                }, T.VoidTovoid()), child: new text.Text.new("Login")}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                  navigator.Navigator.pushNamed(T.ObjectN(), context, "signup");
                }, T.VoidTovoid()), child: new text.Text.new("Create an Account")})])})})});
    }
    static ['_#new#tearOff']() {
      return new login._MyLoginState.new();
    }
  };
  (login._MyLoginState.new = function() {
    this.emailController = new editable_text.TextEditingController.new();
    this.passwordController = new editable_text.TextEditingController.new();
    login._MyLoginState.__proto__.new.call(this);
    ;
  }).prototype = login._MyLoginState.prototype;
  dart.addTypeTests(login._MyLoginState);
  dart.addTypeCaches(login._MyLoginState);
  dart.setMethodSignature(login._MyLoginState, () => ({
    __proto__: dart.getMethods(login._MyLoginState.__proto__),
    [_validateInputs]: dart.fnType(core.bool, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login._MyLoginState, I[0]);
  dart.setFieldSignature(login._MyLoginState, () => ({
    __proto__: dart.getFields(login._MyLoginState.__proto__),
    emailController: dart.finalFieldType(editable_text.TextEditingController),
    passwordController: dart.finalFieldType(editable_text.TextEditingController)
  }));
  dart.setStaticFieldSignature(login._MyLoginState, () => ['emailRegex', 'passwordRegex']);
  dart.defineLazy(login._MyLoginState, {
    /*login._MyLoginState.emailRegex*/get emailRegex() {
      return core.RegExp.new("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$");
    },
    /*login._MyLoginState.passwordRegex*/get passwordRegex() {
      return core.RegExp.new("^(?=.*[a-z])(?=.*[A-Z])(?=.*[@_])[a-zA-Z0-9@_]{8,}$");
    }
  }, false);
  signup.MySignup = class MySignup extends framework.StatefulWidget {
    createState() {
      return new signup._MySignupState.new();
    }
    static ['_#new#tearOff']() {
      return new signup.MySignup.new();
    }
  };
  (signup.MySignup.new = function() {
    signup.MySignup.__proto__.new.call(this);
    ;
  }).prototype = signup.MySignup.prototype;
  dart.addTypeTests(signup.MySignup);
  dart.addTypeCaches(signup.MySignup);
  dart.setMethodSignature(signup.MySignup, () => ({
    __proto__: dart.getMethods(signup.MySignup.__proto__),
    createState: dart.fnType(signup._MySignupState, [])
  }));
  dart.setLibraryUri(signup.MySignup, I[1]);
  var _validateInputs$ = dart.privateName(signup, "_validateInputs");
  signup._MySignupState = class _MySignupState extends framework.State$(signup.MySignup) {
    [_validateInputs$]() {
      let email = this.emailController.text[$trim]();
      let password = this.passwordController.text[$trim]();
      if (email[$isEmpty] || password[$isEmpty]) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter both email and password."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      if (!signup._MySignupState.emailRegex.hasMatch(email)) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter a valid email address."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      if (!signup._MySignupState.passwordRegex.hasMatch(password)) {
        dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Error"), content: new text.Text.new("Please enter a valid password.\n" + "Password must contain at least one lowercase letter, " + "one uppercase letter, one special character (@ or _), " + "and be at least 8 characters long."), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), context), T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
        return false;
      }
      return true;
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Sign Up"), leading: new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.arrow_back), onPressed: dart.fn(() => {
              navigator.Navigator.pop(T.ObjectN(), context);
            }, T.VoidTovoid())})}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(20), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text_field.TextField.new({controller: this.emailController, decoration: new input_decorator.InputDecoration.new({labelText: "Email"})}), new text_field.TextField.new({controller: this.passwordController, decoration: new input_decorator.InputDecoration.new({labelText: "Password"}), obscureText: true}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  if (this[_validateInputs$]()) {
                    let email = this.emailController.text[$trim]();
                    let password = this.passwordController.text[$trim]();
                    navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), context, new page.MaterialPageRoute.new({builder: dart.fn(context => new home.HomePage.new({userEmail: email, successMessage: "Signup Successful!"}), T.BuildContextToHomePage())}));
                  }
                }, T.VoidTovoid()), child: new text.Text.new("Sign Up")})])})})});
    }
    static ['_#new#tearOff']() {
      return new signup._MySignupState.new();
    }
  };
  (signup._MySignupState.new = function() {
    this.emailController = new editable_text.TextEditingController.new();
    this.passwordController = new editable_text.TextEditingController.new();
    signup._MySignupState.__proto__.new.call(this);
    ;
  }).prototype = signup._MySignupState.prototype;
  dart.addTypeTests(signup._MySignupState);
  dart.addTypeCaches(signup._MySignupState);
  dart.setMethodSignature(signup._MySignupState, () => ({
    __proto__: dart.getMethods(signup._MySignupState.__proto__),
    [_validateInputs$]: dart.fnType(core.bool, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signup._MySignupState, I[1]);
  dart.setFieldSignature(signup._MySignupState, () => ({
    __proto__: dart.getFields(signup._MySignupState.__proto__),
    emailController: dart.finalFieldType(editable_text.TextEditingController),
    passwordController: dart.finalFieldType(editable_text.TextEditingController)
  }));
  dart.setStaticFieldSignature(signup._MySignupState, () => ['emailRegex', 'passwordRegex']);
  dart.defineLazy(signup._MySignupState, {
    /*signup._MySignupState.emailRegex*/get emailRegex() {
      return core.RegExp.new("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$");
    },
    /*signup._MySignupState.passwordRegex*/get passwordRegex() {
      return core.RegExp.new("^(?=.*[a-z])(?=.*[A-Z])(?=.*[@_])[a-zA-Z0-9@_]{8,}$");
    }
  }, false);
  var userEmail$ = dart.privateName(home, "HomePage.userEmail");
  var successMessage$ = dart.privateName(home, "HomePage.successMessage");
  home.HomePage = class HomePage extends framework.StatelessWidget {
    get userEmail() {
      return this[userEmail$];
    }
    set userEmail(value) {
      super.userEmail = value;
    }
    get successMessage() {
      return this[successMessage$];
    }
    set successMessage(value) {
      super.successMessage = value;
    }
    static ['_#new#tearOff'](opts) {
      let userEmail = opts && 'userEmail' in opts ? opts.userEmail : null;
      let successMessage = opts && 'successMessage' in opts ? opts.successMessage : null;
      return new home.HomePage.new({userEmail: userEmail, successMessage: successMessage});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Welcome"), actions: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.logout), onPressed: dart.fn(() => {
                navigator.Navigator.pushReplacementNamed(T.ObjectN(), T.ObjectN(), context, "login");
              }, T.VoidTovoid())})])}), body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new(this.successMessage, {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 20}), new text.Text.new("Email: " + this.userEmail, {style: new text_style.TextStyle.new({fontSize: 18})}), new basic.SizedBox.new({height: 20}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  navigator.Navigator.pushReplacementNamed(T.ObjectN(), T.ObjectN(), context, "login");
                }, T.VoidTovoid()), child: new text.Text.new("Logout")})])})})});
    }
  };
  (home.HomePage.new = function(opts) {
    let userEmail = opts && 'userEmail' in opts ? opts.userEmail : null;
    let successMessage = opts && 'successMessage' in opts ? opts.successMessage : null;
    this[userEmail$] = userEmail;
    this[successMessage$] = successMessage;
    home.HomePage.__proto__.new.call(this);
    ;
  }).prototype = home.HomePage.prototype;
  dart.addTypeTests(home.HomePage);
  dart.addTypeCaches(home.HomePage);
  dart.setMethodSignature(home.HomePage, () => ({
    __proto__: dart.getMethods(home.HomePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(home.HomePage, I[2]);
  dart.setFieldSignature(home.HomePage, () => ({
    __proto__: dart.getFields(home.HomePage.__proto__),
    userEmail: dart.finalFieldType(core.String),
    successMessage: dart.finalFieldType(core.String)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/login.dart": login,
    "package:flutter_app/signup.dart": signup,
    "package:flutter_app/home.dart": home
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/login.dart","/zapp/project/lib/signup.dart","/zapp/project/lib/home.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    login: login,
    signup: signup,
    home: home
  };
}));

//# sourceMappingURL=main.js.map
